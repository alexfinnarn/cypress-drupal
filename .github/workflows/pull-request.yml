name: CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set tags env variables.
        run: |
          cho "has_tags=false" >> $GITHUB_ENV
          text=$(git log -1 --no-merges --pretty=%B)
          IFS='#'
          read -ra splitIFS <<< "$text"
          echo "tags are: ${splitIFS[1]}"
          IFS=''
          if [[ "${splitIFS[1]}" == *"@"*  ]]; then
            echo "has_tags=true" >> $GITHUB_ENV
            echo "spec_tags=${splitIFS[1]}" >> $GITHUB_ENV
          fi

      - name: Test env var sets.
        run: |
          echo "has_tags: ${{ env.has_tags }}"
          echo "spec_tags: ${{ env.spec_tags }}"
          cd slksksks

      - uses: php-actions/composer@v6
        with:
          php_version: '8.1'
          php_extensions: gd
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install ddev.
        run: |
          curl -fsSL https://apt.fury.io/drud/gpg.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/ddev.gpg > /dev/null
          echo "deb [signed-by=/etc/apt/trusted.gpg.d/ddev.gpg] https://apt.fury.io/drud/ * *" | sudo tee /etc/apt/sources.list.d/ddev.list
          sudo apt update && sudo apt install -y ddev

      - name: Boot dddev
        run: ddev start

      - name: Install site
        run: ddev drush si -y

      - name: Enable testing dependencies.
        run: ddev drush en cyd_functional_testing -y

      - name: Install node dependencies.
        run: yarn install --frozen-lockfile

      - name: Run tagged tests.
        if : ${{ env.has_tags == 'true' }}
        run: yarn run cypress run --env grepTags=${{ env.spec_tags }}

      - name: Run other tests.
        if : ${{ env.has_tags != 'true' }}
        run: yarn run cypress run --env grepTags=-@content

      #      - name: Publish test results.
      #        uses: EnricoMi/publish-unit-test-result-action@v1
      #        if: github.actor != 'dependabot[bot]' && steps.cypress.outcome != 'success'
      #        with:
      #          files: cypress/*.png
      #          check_name: "Cypress Test Results"
      #
      #      - name: Archive test results.
      #        uses: actions/upload-artifact@v2
      #        if: steps.cypress.outcome != 'success'
      #        with:
      #          name: cypress-results
      #          path: cypress
      #          retention-days: 2

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
