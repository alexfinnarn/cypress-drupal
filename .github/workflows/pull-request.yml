name: CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [ 1, 2 ]
    steps:
      - uses: actions/checkout@v3
      - uses: php-actions/composer@v6
        with:
          php_version: '8.1'
          php_extensions: gd
          cache: 'composer'
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install ddev.
        run: |
          curl -fsSL https://apt.fury.io/drud/gpg.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/ddev.gpg > /dev/null
          echo "deb [signed-by=/etc/apt/trusted.gpg.d/ddev.gpg] https://apt.fury.io/drud/ * *" | sudo tee /etc/apt/sources.list.d/ddev.list
          sudo apt update && sudo apt install -y ddev

      - name: Boot dddev
        run: ddev start

      - name: Install site
        run: ddev drush si -y

      - name: Enable testing dependencies.
        run: ddev drush en cyd_functional_testing -y

      - name: Install node dependencies.
        run: npm install --frozen-lockfile

      # See more at https://github.com/cypress-io/cypress/tree/develop/npm/grep
      # Only run the tests tagged with @content and filter so fewer tests checked.
      - name: Run tagged tests.
        run: npm run cypress run --env grepTags=@content,grepFilterSpecs=true

      # Run all tests without @content tag. Skips any tests tagged with @content.
      - name: Run other tests.
        run: npm run cypress run --env grepTags=-@content


      - name: Publish test results.
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: github.actor != 'dependabot[bot]' && steps.cypress.outcome != 'success'
        with:
          files: cypress/*.png
          check_name: "Cypress Test Results"

      - name: Archive test results.
        uses: actions/upload-artifact@v2
        if: steps.cypress.outcome != 'success'
        with:
          name: cypress-results
          path: cypress
          retention-days: 2

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
