name: CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set tags env variables.
        run: |
          # Set "checking" variable to false by default.
          echo "has_tags=false" >> $GITHUB_ENV
          # Get your last commit message, not the merge commit.
          text=$(git log -1 --no-merges --pretty=%B)
          # Read the commit message into an array split by "#".
          readarray -d "#" -t commit_message <<< "$text"
          # Sanity check.
          echo "the tags are: ${commit_message[1]}"
          # Add tags and overwrite "checking" variable to true if there are tags.
          if [[ "${commit_message[1]}" == *"@"*  ]]; then
            echo "has_tags=true" >> $GITHUB_ENV
            echo "spec_tags=${commit_message[1]}" >> $GITHUB_ENV
          fi

#      - name: Test env var sets.
#        run: |
#          echo "has_tags: ${{ env.has_tags }}"
#          echo "spec_tags: ${{ env.spec_tags }}"
#          cd slksksksdsf

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: gd
          tools: composer
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install ddev.
        run: |
          curl -fsSL https://apt.fury.io/drud/gpg.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/ddev.gpg > /dev/null
          echo "deb [signed-by=/etc/apt/trusted.gpg.d/ddev.gpg] https://apt.fury.io/drud/ * *" | sudo tee /etc/apt/sources.list.d/ddev.list
          sudo apt update && sudo apt install -y ddev

      - name: Setup Drupal website.
        run: ./scripts/setup.sh

      - name: Enable testing dependencies.
        run:  |
          mv modules/cyd_functional_testing drupal/web/modules/custom/
          ls -al drupal/web/modules/custom/
          cd drupal
          ddev drush en cyd_functional_testing -y
          cd ../

      - name: Install node dependencies.
        run: yarn install --frozen-lockfile

      - name: Run tagged tests.
        if : ${{ env.has_tags == 'true' }}
        run: yarn run cypress run --env grepTags="${{ env.spec_tags }}"

      - name: Run other tests.
        if : ${{ env.has_tags != 'true' }}
        run: yarn run cypress run --env grepTags="@smoke"

      #      - name: Publish test results.
      #        uses: EnricoMi/publish-unit-test-result-action@v1
      #        if: github.actor != 'dependabot[bot]' && steps.cypress.outcome != 'success'
      #        with:
      #          files: cypress/*.png
      #          check_name: "Cypress Test Results"
      #
      #      - name: Archive test results.
      #        uses: actions/upload-artifact@v2
      #        if: steps.cypress.outcome != 'success'
      #        with:
      #          name: cypress-results
      #          path: cypress
      #          retention-days: 2

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
